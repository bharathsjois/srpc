// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#ifndef PROTOBUF_addressbook_2eproto__INCLUDED
#define PROTOBUF_addressbook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace addressbook {
class AddressBook;
class AddressBookDefaultTypeInternal;
extern AddressBookDefaultTypeInternal _AddressBook_default_instance_;
class Contact;
class ContactDefaultTypeInternal;
extern ContactDefaultTypeInternal _Contact_default_instance_;
class PhoneNumber;
class PhoneNumberDefaultTypeInternal;
extern PhoneNumberDefaultTypeInternal _PhoneNumber_default_instance_;
class PhoneNumberList;
class PhoneNumberListDefaultTypeInternal;
extern PhoneNumberListDefaultTypeInternal _PhoneNumberList_default_instance_;
}  // namespace addressbook

namespace addressbook {

namespace protobuf_addressbook_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_addressbook_2eproto

// ===================================================================

class PhoneNumber : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:addressbook.PhoneNumber) */ {
 public:
  PhoneNumber();
  virtual ~PhoneNumber();

  PhoneNumber(const PhoneNumber& from);

  inline PhoneNumber& operator=(const PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhoneNumber& default_instance();

  static inline const PhoneNumber* internal_default_instance() {
    return reinterpret_cast<const PhoneNumber*>(
               &_PhoneNumber_default_instance_);
  }

  void Swap(PhoneNumber* other);

  // implements Message ----------------------------------------------

  inline PhoneNumber* New() const PROTOBUF_FINAL { return New(NULL); }

  PhoneNumber* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhoneNumber& from);
  void MergeFrom(const PhoneNumber& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhoneNumber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string number = 1;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  #if LANG_CXX11
  void set_number(::std::string&& value);
  #endif
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // @@protoc_insertion_point(class_scope:addressbook.PhoneNumber)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  mutable int _cached_size_;
  friend struct protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhoneNumberList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:addressbook.PhoneNumberList) */ {
 public:
  PhoneNumberList();
  virtual ~PhoneNumberList();

  PhoneNumberList(const PhoneNumberList& from);

  inline PhoneNumberList& operator=(const PhoneNumberList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhoneNumberList& default_instance();

  static inline const PhoneNumberList* internal_default_instance() {
    return reinterpret_cast<const PhoneNumberList*>(
               &_PhoneNumberList_default_instance_);
  }

  void Swap(PhoneNumberList* other);

  // implements Message ----------------------------------------------

  inline PhoneNumberList* New() const PROTOBUF_FINAL { return New(NULL); }

  PhoneNumberList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhoneNumberList& from);
  void MergeFrom(const PhoneNumberList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhoneNumberList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .addressbook.PhoneNumber numbers = 1;
  int numbers_size() const;
  void clear_numbers();
  static const int kNumbersFieldNumber = 1;
  const ::addressbook::PhoneNumber& numbers(int index) const;
  ::addressbook::PhoneNumber* mutable_numbers(int index);
  ::addressbook::PhoneNumber* add_numbers();
  ::google::protobuf::RepeatedPtrField< ::addressbook::PhoneNumber >*
      mutable_numbers();
  const ::google::protobuf::RepeatedPtrField< ::addressbook::PhoneNumber >&
      numbers() const;

  // @@protoc_insertion_point(class_scope:addressbook.PhoneNumberList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::addressbook::PhoneNumber > numbers_;
  mutable int _cached_size_;
  friend struct protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Contact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:addressbook.Contact) */ {
 public:
  Contact();
  virtual ~Contact();

  Contact(const Contact& from);

  inline Contact& operator=(const Contact& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Contact& default_instance();

  static inline const Contact* internal_default_instance() {
    return reinterpret_cast<const Contact*>(
               &_Contact_default_instance_);
  }

  void Swap(Contact* other);

  // implements Message ----------------------------------------------

  inline Contact* New() const PROTOBUF_FINAL { return New(NULL); }

  Contact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Contact& from);
  void MergeFrom(const Contact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Contact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .addressbook.PhoneNumberList numbers = 2;
  bool has_numbers() const;
  void clear_numbers();
  static const int kNumbersFieldNumber = 2;
  const ::addressbook::PhoneNumberList& numbers() const;
  ::addressbook::PhoneNumberList* mutable_numbers();
  ::addressbook::PhoneNumberList* release_numbers();
  void set_allocated_numbers(::addressbook::PhoneNumberList* numbers);

  // @@protoc_insertion_point(class_scope:addressbook.Contact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::addressbook::PhoneNumberList* numbers_;
  mutable int _cached_size_;
  friend struct protobuf_addressbook_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddressBook : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:addressbook.AddressBook) */ {
 public:
  AddressBook();
  virtual ~AddressBook();

  AddressBook(const AddressBook& from);

  inline AddressBook& operator=(const AddressBook& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressBook& default_instance();

  static inline const AddressBook* internal_default_instance() {
    return reinterpret_cast<const AddressBook*>(
               &_AddressBook_default_instance_);
  }

  void Swap(AddressBook* other);

  // implements Message ----------------------------------------------

  inline AddressBook* New() const PROTOBUF_FINAL { return New(NULL); }

  AddressBook* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddressBook& from);
  void MergeFrom(const AddressBook& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddressBook* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .addressbook.Contact contactList = 1;
  int contactlist_size() const;
  void clear_contactlist();
  static const int kContactListFieldNumber = 1;
  const ::addressbook::Contact& contactlist(int index) const;
  ::addressbook::Contact* mutable_contactlist(int index);
  ::addressbook::Contact* add_contactlist();
  ::google::protobuf::RepeatedPtrField< ::addressbook::Contact >*
      mutable_contactlist();
  const ::google::protobuf::RepeatedPtrField< ::addressbook::Contact >&
      contactlist() const;

  // @@protoc_insertion_point(class_scope:addressbook.AddressBook)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::addressbook::Contact > contactlist_;
  mutable int _cached_size_;
  friend struct protobuf_addressbook_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PhoneNumber

// string number = 1;
inline void PhoneNumber::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:addressbook.PhoneNumber.number)
  return number_.GetNoArena();
}
inline void PhoneNumber::set_number(const ::std::string& value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:addressbook.PhoneNumber.number)
}
#if LANG_CXX11
inline void PhoneNumber::set_number(::std::string&& value) {
  
  number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:addressbook.PhoneNumber.number)
}
#endif
inline void PhoneNumber::set_number(const char* value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:addressbook.PhoneNumber.number)
}
inline void PhoneNumber::set_number(const char* value, size_t size) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:addressbook.PhoneNumber.number)
}
inline ::std::string* PhoneNumber::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:addressbook.PhoneNumber.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhoneNumber::release_number() {
  // @@protoc_insertion_point(field_release:addressbook.PhoneNumber.number)
  
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneNumber::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:addressbook.PhoneNumber.number)
}

// -------------------------------------------------------------------

// PhoneNumberList

// repeated .addressbook.PhoneNumber numbers = 1;
inline int PhoneNumberList::numbers_size() const {
  return numbers_.size();
}
inline void PhoneNumberList::clear_numbers() {
  numbers_.Clear();
}
inline const ::addressbook::PhoneNumber& PhoneNumberList::numbers(int index) const {
  // @@protoc_insertion_point(field_get:addressbook.PhoneNumberList.numbers)
  return numbers_.Get(index);
}
inline ::addressbook::PhoneNumber* PhoneNumberList::mutable_numbers(int index) {
  // @@protoc_insertion_point(field_mutable:addressbook.PhoneNumberList.numbers)
  return numbers_.Mutable(index);
}
inline ::addressbook::PhoneNumber* PhoneNumberList::add_numbers() {
  // @@protoc_insertion_point(field_add:addressbook.PhoneNumberList.numbers)
  return numbers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::addressbook::PhoneNumber >*
PhoneNumberList::mutable_numbers() {
  // @@protoc_insertion_point(field_mutable_list:addressbook.PhoneNumberList.numbers)
  return &numbers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::addressbook::PhoneNumber >&
PhoneNumberList::numbers() const {
  // @@protoc_insertion_point(field_list:addressbook.PhoneNumberList.numbers)
  return numbers_;
}

// -------------------------------------------------------------------

// Contact

// string name = 1;
inline void Contact::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Contact::name() const {
  // @@protoc_insertion_point(field_get:addressbook.Contact.name)
  return name_.GetNoArena();
}
inline void Contact::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:addressbook.Contact.name)
}
#if LANG_CXX11
inline void Contact::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:addressbook.Contact.name)
}
#endif
inline void Contact::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:addressbook.Contact.name)
}
inline void Contact::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:addressbook.Contact.name)
}
inline ::std::string* Contact::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:addressbook.Contact.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Contact::release_name() {
  // @@protoc_insertion_point(field_release:addressbook.Contact.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Contact::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:addressbook.Contact.name)
}

// .addressbook.PhoneNumberList numbers = 2;
inline bool Contact::has_numbers() const {
  return this != internal_default_instance() && numbers_ != NULL;
}
inline void Contact::clear_numbers() {
  if (GetArenaNoVirtual() == NULL && numbers_ != NULL) delete numbers_;
  numbers_ = NULL;
}
inline const ::addressbook::PhoneNumberList& Contact::numbers() const {
  // @@protoc_insertion_point(field_get:addressbook.Contact.numbers)
  return numbers_ != NULL ? *numbers_
                         : *::addressbook::PhoneNumberList::internal_default_instance();
}
inline ::addressbook::PhoneNumberList* Contact::mutable_numbers() {
  
  if (numbers_ == NULL) {
    numbers_ = new ::addressbook::PhoneNumberList;
  }
  // @@protoc_insertion_point(field_mutable:addressbook.Contact.numbers)
  return numbers_;
}
inline ::addressbook::PhoneNumberList* Contact::release_numbers() {
  // @@protoc_insertion_point(field_release:addressbook.Contact.numbers)
  
  ::addressbook::PhoneNumberList* temp = numbers_;
  numbers_ = NULL;
  return temp;
}
inline void Contact::set_allocated_numbers(::addressbook::PhoneNumberList* numbers) {
  delete numbers_;
  numbers_ = numbers;
  if (numbers) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:addressbook.Contact.numbers)
}

// -------------------------------------------------------------------

// AddressBook

// repeated .addressbook.Contact contactList = 1;
inline int AddressBook::contactlist_size() const {
  return contactlist_.size();
}
inline void AddressBook::clear_contactlist() {
  contactlist_.Clear();
}
inline const ::addressbook::Contact& AddressBook::contactlist(int index) const {
  // @@protoc_insertion_point(field_get:addressbook.AddressBook.contactList)
  return contactlist_.Get(index);
}
inline ::addressbook::Contact* AddressBook::mutable_contactlist(int index) {
  // @@protoc_insertion_point(field_mutable:addressbook.AddressBook.contactList)
  return contactlist_.Mutable(index);
}
inline ::addressbook::Contact* AddressBook::add_contactlist() {
  // @@protoc_insertion_point(field_add:addressbook.AddressBook.contactList)
  return contactlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::addressbook::Contact >*
AddressBook::mutable_contactlist() {
  // @@protoc_insertion_point(field_mutable_list:addressbook.AddressBook.contactList)
  return &contactlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::addressbook::Contact >&
AddressBook::contactlist() const {
  // @@protoc_insertion_point(field_list:addressbook.AddressBook.contactList)
  return contactlist_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace addressbook

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_addressbook_2eproto__INCLUDED
